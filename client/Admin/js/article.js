async function get_article() {
    let response = await fetch("http://localhost:8000/api/article/all");
    if (response.ok) {
        let json = await response.json();
        return json;
    } else {
        alert("–û—à–∏–±–∫–∞ HTTP: " + response.status);
    }
}
async function render_article() {
    let template = `
    <tr>
        <th scope="row">{–ò–î}</th>
        <td>{–ó–ê–ì–û–õ–û–í–û–ö}</td>
        <td div class = "col-sm-6">{–û–ü–ò–°–ê–ù–ò–ï}</td>
        <td>{–î–ê–¢–ê–°–û–ó–î–ê–ù–ò–Ø}</td>
        <td><img src="{–ö–ê–†–¢–ò–ù–ö–ê}" width="75px" class="img-fluid rounded-start" alt="Picture"></td>
        <td>
         <button class="btn btn-danger me-2" onclick="delete_article({–ò–î})">üóë</button>
         <a class="btn btn-warning" href="create_article.html?id={–ò–î}">‚úèÔ∏è</a>
        </td>
    </tr>`;
    let articles = await get_article();
    let container = document.getElementById("article");
    articles.forEach(element => {
        let article = template
            .replaceAll("{–ò–î}", element.id)
            .replace("{–ó–ê–ì–û–õ–û–í–û–ö}", element.Heading)
            .replace("{–û–ü–ò–°–ê–ù–ò–ï}", element.description)
            .replace("{–ö–ê–†–¢–ò–ù–ö–ê}", element.picture)
            .replace("{–î–ê–¢–ê–°–û–ó–î–ê–ù–ò–Ø}", element.dfc);  
        container.innerHTML += article;
    });
}
render_article();
async function delete_article(id) 
{ // –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –ø–æ id
    let response = await fetch("http://localhost:8000/api/article/" + id, {"method": "DELETE"})
    if (response.ok) {
        window.location.reload();
    } else {
        alert("–û—à–∏–±–∫–∞ HTTP: " + response.status)
    }
}